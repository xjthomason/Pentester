# modular pentesting tool
	# modules
		# vulnerability scanner (port scanner)
			# output is open ports, services running (nmap)
		# brute force ssh module with specialized wordlists
			# output is successful/unsuccessful auth
			# version of ssh server running
		# brute force ftp module with specialized wordlists
			# output is succesful/unsuccessful auth
			# version of ftp server running
		# http directory mapper
			# try and map out web directory 
			# look for pages with user input
			# sql injection opportunities

from modules.intros import PrintIntros
from modules.scanner import Scanner
from modules.ssh_brute import SSH_Force
# from ftp_brute import ftp_brute
# from http_scan import http

# TODO write console parser with option selection screen
# TODO parse given arguments to navigate the program
# TODO take arguments and run them through imported modules
# TODO output info in readable format
	# TODO give option to output into file

def main():
	
	repeat = True
	
	while repeat:
		intros = PrintIntros()
			
		intros.getReset()
		module = raw_input("What module do you want to use?: ")
		print
		print
		
		if (module == "1"):
			intros.getScanner_Intro()
			host = str(raw_input("Please enter the host IP: "))
			commands = raw_input("Enter the number for what Nmap command you want to run: ")
			nmap = Scanner()
			if commands == "3":
				port = raw_input("Enter the port number: ")
				nmap.nmapScan(host, port, commands)
			else:
				nmap.nmapScan(host, None, commands)
		elif (module == "2"):
			ssh.getSSH_Intro()
			host = str(raw_input("Please enter the host IP: "))
		elif (module == "3"):
			pass
		
		
		again = intros.getAgainCheck()
		if again == 'n' or again == 'N':
			repeat = False
			
main()	
